// <auto-generated />
using System;
using DBConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DBConnection.Migrations
{
    [DbContext(typeof(CoreDbContext))]
    [Migration("20190430163533_DBConnectionMigrationCreate")]
    partial class DBConnectionMigrationCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.ClienteAnexos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdCliente");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<byte[]>("arquivo")
                        .HasColumnName("Arquivo")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<string>("descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<int>("tamanho")
                        .HasColumnName("Tamanho");

                    b.Property<string>("tipo")
                        .HasColumnName("Tipo")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("ClienteAnexos");
                });

            modelBuilder.Entity("Domain.ClienteConexoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdCliente")
                        .HasColumnName("IdCliente");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("ip")
                        .HasColumnName("IP")
                        .HasColumnType("Nvarchar(500)");

                    b.Property<string>("obs")
                        .HasColumnName("Obs")
                        .HasColumnType("Nvarchar(4000)");

                    b.Property<string>("senha")
                        .HasColumnName("Senha")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("usuario")
                        .HasColumnName("Usuario")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("ClienteConexoes");
                });

            modelBuilder.Entity("Domain.ClienteLinks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdCliente")
                        .HasColumnName("IdCliente");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("link")
                        .HasColumnName("Link")
                        .HasColumnType("Nvarchar(2000)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("senha")
                        .HasColumnName("Senha")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("usuario")
                        .HasColumnName("Usuario")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("ClienteLinks");
                });

            modelBuilder.Entity("Domain.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("obs")
                        .HasColumnName("Obs")
                        .HasColumnType("Nvarchar(4000)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Domain.KnowBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientesId");

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("Nvarchar(500)");

                    b.Property<string>("erro")
                        .HasColumnName("Erro")
                        .HasColumnType("Nvarchar(4000)");

                    b.Property<string>("obs")
                        .HasColumnName("Obs")
                        .HasColumnType("Nvarchar(4000)");

                    b.Property<string>("solucao")
                        .HasColumnName("Solucao")
                        .HasColumnType("Nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.ToTable("KnowBase");
                });

            modelBuilder.Entity("Domain.KnowBaseAnexos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdKnowbase");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<byte[]>("arquivo")
                        .HasColumnName("Arquivo")
                        .HasColumnType("varbinary(MAX)");

                    b.Property<string>("descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("tipo")
                        .HasColumnName("Tipo")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdKnowbase");

                    b.ToTable("KnowBaseAnexos");
                });

            modelBuilder.Entity("Domain.KnowLocais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("KnowLocais");
                });

            modelBuilder.Entity("Domain.KnowProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInclusion")
                        .HasColumnName("DataInclusion")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .HasColumnName("UserName")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("nome")
                        .HasColumnName("Nome")
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("versao")
                        .HasColumnName("Versao")
                        .HasColumnType("Nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("KnowProduto");
                });

            modelBuilder.Entity("Domain.ClienteAnexos", b =>
                {
                    b.HasOne("Domain.Clientes", "cliente")
                        .WithMany("clienteanexos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.ClienteConexoes", b =>
                {
                    b.HasOne("Domain.Clientes", "cliente")
                        .WithMany("clienteconexao")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.ClienteLinks", b =>
                {
                    b.HasOne("Domain.Clientes", "cliente")
                        .WithMany("clientelinks")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Domain.KnowBase", b =>
                {
                    b.HasOne("Domain.Clientes")
                        .WithMany("knowbase")
                        .HasForeignKey("ClientesId");
                });

            modelBuilder.Entity("Domain.KnowBaseAnexos", b =>
                {
                    b.HasOne("Domain.KnowBase", "knowbase")
                        .WithMany("knowbaseanexo")
                        .HasForeignKey("IdKnowbase")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
